// Generated by CoffeeScript 1.7.1
(function() {
  var WKSState,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  WKSState = (function() {
    function WKSState(_name, _props, _next, id) {
      this._name = _name;
      this._props = _props;
      this._next = _next;
      this.id = id;
    }

    WKSState.prototype.name = function() {
      return this._name;
    };

    WKSState.prototype.next = function(cb) {
      var target, weight, _i, _len, _ref, _ref1, _results;
      _ref = this._next;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], weight = _ref1.weight, target = _ref1.target;
        _results.push(cb(weight, target));
      }
      return _results;
    };

    WKSState.prototype.props = function() {
      return this._props;
    };

    WKSState.prototype.hasProp = function(p) {
      return __indexOf.call(this._props, p) >= 0;
    };

    WKSState.prototype.stringify = function() {
      return this.name();
    };

    WKSState.prototype.getThisState = function() {
      return this;
    };

    return WKSState;

  })();

  this.WKS = (function() {
    function WKS() {
      this.addProp = __bind(this.addProp, this);
      this.addTransition = __bind(this.addTransition, this);
      this.addState = __bind(this.addState, this);
      this.getStateByName = __bind(this.getStateByName, this);
      this.getExplicitStateNames = __bind(this.getExplicitStateNames, this);
      this.initState = __bind(this.initState, this);
      this.states = [];
      this.nextid = 0;
    }

    WKS.prototype.resolve = function() {};

    WKS.prototype.initState = function() {
      return this.states[0];
    };

    WKS.prototype.getExplicitStateNames = function() {
      var s, _i, _len, _ref, _results;
      _ref = this.states;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        _results.push(s.name());
      }
      return _results;
    };

    WKS.prototype.getStateByName = function(name) {
      var s, _i, _len, _ref;
      _ref = this.states;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        if (s.name() === name) {
          return s;
        }
      }
    };

    WKS.prototype.addState = function(name) {
      var state;
      state = new WKSState(name, [], [], this.nextid++);
      this.states.push(state);
      return state;
    };

    WKS.prototype.addTransition = function(source, weight, target) {
      return source._next.push({
        weight: weight,
        target: target
      });
    };

    WKS.prototype.addProp = function(state, prop) {
      if (__indexOf.call(state._props, prop) < 0) {
        return state._props.push(prop);
      }
    };

    return WKS;

  })();

}).call(this);
