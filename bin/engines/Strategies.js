// Generated by CoffeeScript 1.7.1
(function() {
  var Strategy, compare_priority_max, compare_priority_min,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Strategies = {};

  Strategy = (function() {
    function Strategy() {}

    Strategy.prototype.pop = function() {
      throw new Error("Must be implemented in subclass");
    };

    Strategy.prototype.push = function(e) {
      throw new Error("Must be implemented in subclass");
    };

    Strategy.prototype.empty = function() {
      throw new Error("Must be implemented in subclass");
    };

    Strategy.prototype.size = function() {
      throw new Error("Must be implemented in subclass");
    };

    Strategy.prototype.push_dep = function(e) {
      if (!e.in_queue) {
        e.in_queue = true;
        return this.push(e);
      }
    };

    return Strategy;

  })();

  this.DefaultStrategy = "Depth First Search";

  this.Strategies["Breadth First Search"] = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      this.queue = new buckets.Queue();
    }

    _Class.prototype.pop = function() {
      return this.queue.dequeue();
    };

    _Class.prototype.push = function(e) {
      return this.queue.enqueue(e);
    };

    _Class.prototype.empty = function() {
      return this.queue.isEmpty();
    };

    _Class.prototype.size = function() {
      return this.queue.size();
    };

    return _Class;

  })(Strategy);

  this.Strategies["Depth First Search"] = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      this.stack = new buckets.Stack();
    }

    _Class.prototype.pop = function() {
      return this.stack.pop();
    };

    _Class.prototype.push = function(e) {
      return this.stack.push(e);
    };

    _Class.prototype.empty = function() {
      return this.stack.isEmpty();
    };

    _Class.prototype.size = function() {
      return this.stack.size();
    };

    return _Class;

  })(Strategy);

  compare_priority_max = function(a, b) {
    if (a.priority < b.priority) {
      return -1;
    }
    if (a.priority > b.priority) {
      return 1;
    }
    return 0;
  };

  compare_priority_min = function(a, b) {
    if (a.priority < b.priority) {
      return 1;
    }
    if (a.priority > b.priority) {
      return -1;
    }
    return 0;
  };

  this.Strategies["Random Priority"] = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      this.queue = new buckets.PriorityQueue(compare_priority_max);
    }

    _Class.prototype.pop = function() {
      return this.queue.dequeue();
    };

    _Class.prototype.push = function(e) {
      if (e.priority == null) {
        e.priority = Math.random();
      }
      return this.queue.enqueue(e);
    };

    _Class.prototype.empty = function() {
      return this.queue.isEmpty();
    };

    _Class.prototype.size = function() {
      return this.queue.size();
    };

    return _Class;

  })(Strategy);

  this.Strategies["Breadth First, Prioritized Propagation"] = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      this.queue = new buckets.PriorityQueue(compare_priority_min);
      this.count = 0;
    }

    _Class.prototype.pop = function() {
      return this.queue.dequeue();
    };

    _Class.prototype.push = function(e) {
      if (e.priority == null) {
        e.priority = this.count++;
      }
      return this.queue.enqueue(e);
    };

    _Class.prototype.empty = function() {
      return this.queue.isEmpty();
    };

    _Class.prototype.size = function() {
      return this.queue.size();
    };

    return _Class;

  })(Strategy);

  this.Strategies["Breadth First, Propagation Imediate"] = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      this.list = new buckets.LinkedList();
    }

    _Class.prototype.pop = function() {
      var retval;
      retval = this.list.first();
      this.list.removeElementAtIndex(0);
      return retval;
    };

    _Class.prototype.push = function(e) {
      return this.list.add(e, this.list.size());
    };

    _Class.prototype.push_dep = function(e) {
      if (!e.in_queue) {
        e.in_queue = true;
        return this.list.add(e, 0);
      }
    };

    _Class.prototype.empty = function() {
      return this.list.size() === 0;
    };

    _Class.prototype.size = function() {
      return this.list.size();
    };

    return _Class;

  })(Strategy);

}).call(this);
